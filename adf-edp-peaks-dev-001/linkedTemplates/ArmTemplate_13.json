{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-edp-peaks-dev-001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/physician_recruitment_hired')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Loading HR Physician Recruit data from EBA",
				"activities": [
					{
						"name": "HrTaRecruitProvider",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "EDW.HrTaRecruitProvider"
							},
							{
								"name": "Destination",
								"value": "dls-stedplandinglakedev01/enterprise/peaks/RAD/physician_recruitment/HrTaRecruitProvider.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_rz7",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HrTaRecruitProvider",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "HrPersonPositionOpenCurrent",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "EDW.HrTaRecruitProvider"
							},
							{
								"name": "Destination",
								"value": "dls-stedplandinglakedev01/enterprise/peaks/RAD/physician_recruitment/HrTaRecruitProvider.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HrPersonPositionOpenCurrent",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HrPersonPositionOpenCurrent2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-20T23:26:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Just test",
				"activities": [
					{
						"name": "Copy data v",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from dbo.pat_enc",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "bld_pat_enc_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "bld_pat_enc_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T21:18:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_ag2_ag2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_fe7",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "dbo.account_2_testing"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from dbo.account_2",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCT_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ACCT_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "CM_PHY_OWNER_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CM_PHY_OWNER_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CM_LOG_OWNER_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CM_LOG_OWNER_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RQG_ACCT_YN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RQG_ACCT_YN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FOL_UP_LEVEL_CUR",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FOL_UP_LEVEL_CUR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "EMPL_ID_NUM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMPL_ID_NUM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILLING_NOTE_EXP_DT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "BILLING_NOTE_EXP_DT",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ALT_BILL_ADDR_YN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALT_BILL_ADDR_YN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ALT_BILL_CITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALT_BILL_CITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ALT_BILL_STATE_C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALT_BILL_STATE_C",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ALT_BILL_ZIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALT_BILL_ZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GUAR_SYNC_OWNER_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "GUAR_SYNC_OWNER_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ROI_UNCMN_REQSTR_YN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROI_UNCMN_REQSTR_YN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "REL_ADDR_ATTN_TO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REL_ADDR_ATTN_TO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EAR_ISOLATED_YN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EAR_ISOLATED_YN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CVG_LAST_VERIF_DT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CVG_LAST_VERIF_DT",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "USER_CVG_LST_VER_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "USER_CVG_LST_VER_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EMPLOYMENT_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EMPLOYMENT_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "EMPLOYER_FAX",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMPLOYER_FAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FAX",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LAST_CLAIM_FORM_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LAST_CLAIM_FORM_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LAST_BILLED_AMT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "LAST_BILLED_AMT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "LAST_INS_BAL",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "LAST_INS_BAL",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "SPOUSE_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SPOUSE_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LAST_CLAIM_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LAST_CLAIM_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LAST_STMT_FORM_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LAST_STMT_FORM_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL_STATUS_EXP_DT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "BILL_STATUS_EXP_DT",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PMT_PLAN_FREQ_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PMT_PLAN_FREQ_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ACCT_VIP_STAT_YN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACCT_VIP_STAT_YN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HBMYC_LST_ST_V_DTTM",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "HBMYC_LST_ST_V_DTTM",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "HBMYC_LST_DB_V_DTTM",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "HBMYC_LST_DB_V_DTTM",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "HBMYC_LST_LT_V_DTTM",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "HBMYC_LST_LT_V_DTTM",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CREDIT_SCORE",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CREDIT_SCORE",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "PROPENSITY_TO_PAY_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PROPENSITY_TO_PAY_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DELIVERY_POINT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DELIVERY_POINT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HAS_ACTIVE_HARS_YN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HAS_ACTIVE_HARS_YN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FOL_UP_LAST_LET_DT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FOL_UP_LAST_LET_DT",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "FOL_UP_LAST_ACT_CYC",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "FOL_UP_LAST_ACT_CYC",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "UNDIST_CREDIT_BAL",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "UNDIST_CREDIT_BAL",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "UNDIST_INS_CR_BAL",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "UNDIST_INS_CR_BAL",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "UNDIST_SP_CR_BAL",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "UNDIST_SP_CR_BAL",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "MILITARY_RANK_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MILITARY_RANK_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BRANCH_OF_SERVICE_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BRANCH_OF_SERVICE_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MIL_COMPONENT_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MIL_COMPONENT_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MIL_PAY_GRADE_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MIL_PAY_GRADE_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DIST_LATER_COUNT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DIST_LATER_COUNT",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "GUAR_EMPR_COUNTY_C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GUAR_EMPR_COUNTY_C",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ALT_BILL_COUNTY_C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALT_BILL_COUNTY_C",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ALT_BILL_COUNTRY_C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALT_BILL_COUNTRY_C",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ALT_BILL_HOUSE_NUM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALT_BILL_HOUSE_NUM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ALT_BILL_DISTRICT_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ALT_BILL_DISTRICT_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "GUAR_SUBDIV_CODE_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GUAR_SUBDIV_CODE_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "REQUESTER_TYPE_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "REQUESTER_TYPE_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ASSOC_PROV_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ASSOC_PROV_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ASSOC_POS_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ASSOC_POS_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "STMT_HOLD_DT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "STMT_HOLD_DT",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "STMT_HOLD_REASON_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "STMT_HOLD_REASON_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "STMT_INTERV_WQ_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "STMT_INTERV_WQ_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "STMT_INTERV_RULE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STMT_INTERV_RULE_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ASSOC_REQSTR_CVG_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ASSOC_REQSTR_CVG_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "PRIMARY_ACCT_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "PRIMARY_ACCT_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ASSOC_ACCT_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ASSOC_ACCT_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ASSOC_PAT_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ASSOC_PAT_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ASSOC_ORG_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ASSOC_ORG_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "MYPT_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MYPT_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ASSOC_AGENCY_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ASSOC_AGENCY_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ASSOC_DEPT_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ASSOC_DEPT_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "MOBILE_PHONE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MOBILE_PHONE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HB_EXT_AR_SELF_PAY_BAL",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "HB_EXT_AR_SELF_PAY_BAL",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "HB_EXT_AR_INS_BAL",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "HB_EXT_AR_INS_BAL",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "HB_EXT_AR_UNDIST_BAL",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "HB_EXT_AR_UNDIST_BAL",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "HB_LAST_AUTOPAY_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "HB_LAST_AUTOPAY_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "FOL_UP_LAST_LEVEL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FOL_UP_LAST_LEVEL",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "PMT_PLAN_DLQ_AMT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "PMT_PLAN_DLQ_AMT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "PMT_PLAN_DUE_AMT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "PMT_PLAN_DUE_AMT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "PMT_PLAN_PAID_AMT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "PMT_PLAN_PAID_AMT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "PMT_PLAN_REMAIN_AMT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "PMT_PLAN_REMAIN_AMT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "EMAIL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMAIL_ADDRESS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MYC_GP_LOCK_YN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MYC_GP_LOCK_YN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MYC_GP_LOCK_UTC_DTTM",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "MYC_GP_LOCK_UTC_DTTM",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ADDR_CHG_USER_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDR_CHG_USER_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ADDR_CHG_INSTANT_DTTM",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ADDR_CHG_INSTANT_DTTM",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ADDR_CHG_SOURCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDR_CHG_SOURCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DFLT_REL_TYPE_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "DFLT_REL_TYPE_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "DFLT_ROI_WORKFLOW_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DFLT_ROI_WORKFLOW_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DFLT_ROI_FORMAT_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DFLT_ROI_FORMAT_C",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "PREFERENCE_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "PREFERENCE_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ROI_GENERIC_REQSTR_YN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROI_GENERIC_REQSTR_YN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PMT_PLAN_CURRENT_MISS_CNT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PMT_PLAN_CURRENT_MISS_CNT",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "PMT_PLAN_TOTAL_MISS_CNT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PMT_PLAN_TOTAL_MISS_CNT",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ASSOC_PAYER_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ASSOC_PAYER_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "PMT_PLAN_AUTOPAY_CARD_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "PMT_PLAN_AUTOPAY_CARD_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "PB_PP_AUTOPAY_SCHED_PMT_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "PB_PP_AUTOPAY_SCHED_PMT_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "PMT_PLAN_CURR_AMT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "PMT_PLAN_CURR_AMT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "LAST_PB_BAL_NOTIF_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LAST_PB_BAL_NOTIF_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LAST_HB_BAL_NOTIF_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LAST_HB_BAL_NOTIF_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PB_SELF_PAY_BAL_UPDATE_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "PB_SELF_PAY_BAL_UPDATE_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "HB_SELF_PAY_BAL_UPDATE_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "HB_SELF_PAY_BAL_UPDATE_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "KI_GUAR_ACCT_VERIF_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "KI_GUAR_ACCT_VERIF_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "KI_GUAR_ACCT_VERIF_STS_C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "KI_GUAR_ACCT_VERIF_STS_C",
											"type": "Int32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_fe7",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_fe7",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-18T17:32:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ou8",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "dls-stedplandinglakedev01/enterprise/peaks/epic_clarity/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from dbo.account",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ou8",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ou8",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-18T17:32:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testval')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from etl.x_Databricks_Logic_new\nwhere Sourcetablename='zc_yes_no'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Val_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Val_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC_VAL",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-18T17:32:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_llv_MiddleLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will copy one batch of objects. The objects belonging to this batch will be copied parallelly.",
				"activities": [
					{
						"name": "DivideOneBatchIntoMultipleGroups",
						"description": "Divide objects from single batch into multiple sub parallel groups to avoid reaching the output limit of lookup activity.",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, add(div(pipeline().parameters.SumOfObjectsToCopyForCurrentBatch, pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity),\n                    if(equals(mod(pipeline().parameters.SumOfObjectsToCopyForCurrentBatch, pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity), 0), 0, 1)))",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "GetObjectsPerGroupToCopy",
									"description": "Get objects (tables etc.) from control table required to be copied in this group. The order of objects to be copied following the TaskId in control table (ORDER BY [TaskId] DESC).",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "WITH OrderedControlTable AS (\n                             SELECT *, ROW_NUMBER() OVER (ORDER BY [TaskId], [Id] DESC) AS RowNumber\n                             FROM @{pipeline().parameters.MainControlTableName}\n                             where TopLevelPipelineName = '@{pipeline().parameters.TopLevelPipelineName}'\n                             and TriggerName like '%@{pipeline().parameters.TriggerName}%' and CopyEnabled = 1)\n                             SELECT * FROM OrderedControlTable WHERE RowNumber BETWEEN @{add(mul(int(item()),pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity),\n                             add(mul(pipeline().parameters.SumOfObjectsToCopyForCurrentBatch, pipeline().parameters.CurrentSequentialNumberOfBatch), 1))}\n                             AND @{min(add(mul(int(item()), pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity), add(mul(pipeline().parameters.SumOfObjectsToCopyForCurrentBatch, pipeline().parameters.CurrentSequentialNumberOfBatch),\n                             pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity)),\n                            mul(pipeline().parameters.SumOfObjectsToCopyForCurrentBatch, add(pipeline().parameters.CurrentSequentialNumberOfBatch,1)), pipeline().parameters.SumOfObjectsToCopy)}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "MetadataDrivenCopyTask_llv_ControlDS",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "CopyObjectsInOneGroup",
									"description": "Execute another pipeline to copy objects from one group. The objects belonging to this group will be copied parallelly.",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "GetObjectsPerGroupToCopy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MetadataDrivenCopyTask_llv_BottomLevel",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ObjectsPerGroupToCopy": {
												"value": "@activity('GetObjectsPerGroupToCopy').output.value",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"MaxNumberOfObjectsReturnedFromLookupActivity": {
						"type": "Int"
					},
					"TopLevelPipelineName": {
						"type": "String"
					},
					"TriggerName": {
						"type": "String"
					},
					"CurrentSequentialNumberOfBatch": {
						"type": "Int"
					},
					"SumOfObjectsToCopy": {
						"type": "Int"
					},
					"SumOfObjectsToCopyForCurrentBatch": {
						"type": "Int"
					},
					"MainControlTableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_llv_20230825"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-25T17:20:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLD_FULL_Tables_Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "to process any changes to tables that load frequency is Full",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Clarity_Bld_FULL_Non_DirectPull_Daily",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Clarity_Bld_FULL_DirectPull_Daily",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-09-29T04:30:00",
						"timeZone": "Mountain Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLD_REQ_Tables_Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "to process any changes to load_type \"REQ\" tables from clarity_bld ",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Clarity_Bld_REQ_DirectPull_Delta",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Clarity_Bld_REQ_CUSTOM_CC_Delta_WorkinProgress",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Clarity_Bld_REQ_PB_CC_Delta",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Clarity_Bld_REQ_SA_CC_Delta",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-09-30T05:00:00",
						"timeZone": "Mountain Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLD_ZC_Tables_Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "To process ZC tables that were changed with any data on daily basis",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Clarity_Bld_ZC_FULL_Delta",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-09-29T04:00:00",
						"timeZone": "Mountain Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_llv_TopLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will count the total number of objects (tables etc.) required to be copied in this run, come up with the number of sequential batches based on the max allowed concurrent copy task, and then execute another pipeline to copy different batches sequentially.",
				"activities": [
					{
						"name": "GetSumOfObjectsToCopy",
						"description": "Count the total number of objects (tables etc.) required to be copied in this run.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT count(*) as count FROM @{pipeline().parameters.MainControlTableName} where TopLevelPipelineName='@{pipeline().Pipeline}' and TriggerName like '%@{pipeline().TriggerName}%' and CopyEnabled = 1",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "MetadataDrivenCopyTask_llv_ControlDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyBatchesOfObjectsSequentially",
						"description": "Come up with the number of sequential batches based on the max allowed concurrent copy tasks, and then execute another pipeline to copy different batches sequentially.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSumOfObjectsToCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, add(div(activity('GetSumOfObjectsToCopy').output.firstRow.count,\n                    pipeline().parameters.MaxNumberOfConcurrentTasks),\n                    if(equals(mod(activity('GetSumOfObjectsToCopy').output.firstRow.count,\n                    pipeline().parameters.MaxNumberOfConcurrentTasks), 0), 0, 1)))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyObjectsInOneBatch",
									"description": "Execute another pipeline to copy one batch of objects. The objects belonging to this batch will be copied parallelly.",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MetadataDrivenCopyTask_llv_MiddleLevel",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"MaxNumberOfObjectsReturnedFromLookupActivity": {
												"value": "@pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity",
												"type": "Expression"
											},
											"TopLevelPipelineName": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											},
											"TriggerName": {
												"value": "@{pipeline().TriggerName}",
												"type": "Expression"
											},
											"CurrentSequentialNumberOfBatch": {
												"value": "@item()",
												"type": "Expression"
											},
											"SumOfObjectsToCopy": {
												"value": "@activity('GetSumOfObjectsToCopy').output.firstRow.count",
												"type": "Expression"
											},
											"SumOfObjectsToCopyForCurrentBatch": {
												"value": "@min(pipeline().parameters.MaxNumberOfConcurrentTasks, activity('GetSumOfObjectsToCopy').output.firstRow.count)",
												"type": "Expression"
											},
											"MainControlTableName": {
												"value": "@pipeline().parameters.MainControlTableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"MaxNumberOfObjectsReturnedFromLookupActivity": {
						"type": "Int",
						"defaultValue": 5000
					},
					"MaxNumberOfConcurrentTasks": {
						"type": "Int",
						"defaultValue": 20
					},
					"MainControlTableName": {
						"type": "String",
						"defaultValue": "sclhs.MainControlTable_llv"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_llv_20230825"
				},
				"annotations": [
					"MetadataDrivenSolution"
				],
				"lastPublishTime": "2023-08-25T17:20:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MetadataDrivenCopyTask_llv_MiddleLevel')]"
			]
		}
	]
}