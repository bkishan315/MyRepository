{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-edp-peaks-dev-001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Bld_REQ_DirectPull_Delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Incremental_CDC from etl.x_Databricks_Logic_new x \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_EXTRACT where INITIALIZE_TIME >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0)) and FILE_SIZE_BYTES>0 ) c on c.TABLE_NAME=x.Sourcetablename \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_DERTBL where ckpt_init >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0))) d on d.TABLE_NAME=x.Sourcetablename \nwhere x.EPIC_CC_Filters= 'Direct Pull' and x.Is_REQ=1 and x.IsActive=1 and (c.TABLE_NAME is not null or  d.TABLE_NAME is not null)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "BLD_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().Query_Incremental_CDC",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BLD_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_delta','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BLD"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T19:04:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Bld_REQ_DirectPull_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Full_CDC from etl.x_Databricks_Logic_new x where x.EPIC_CC_Filters= 'Direct Pull' and x.Is_REQ=1 and x.IsActive=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "BLD_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().Query_Full_cdc",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BLD_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BLD"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T19:04:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Bld_REQ_PB_CC_Delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Incremental_CDC_CC from etl.x_Databricks_Logic_new x \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_EXTRACT where INITIALIZE_TIME >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0)) and FILE_SIZE_BYTES>0 ) c on c.TABLE_NAME=x.Sourcetablename \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_DERTBL where ckpt_init >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0))) d on d.TABLE_NAME=x.Sourcetablename \nwhere EPIC_CC_Filters in ('Patient-Based') and Is_REQ=1 and IsActive=1 and (c.TABLE_NAME is not null or  d.TABLE_NAME is not null)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "BLD_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"description": "using Community connect logic for these table list. rest will use No CC logic until we update it in metadata table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_incremental_CDC_CC",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BLD_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_delta','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BLD"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T19:04:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Bld_REQ_PB_CC_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Full_CC from etl.x_Databricks_Logic_new x where EPIC_CC_Filters in ('Patient-Based') and Is_REQ=1  and IsActive=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "BLD_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"description": "using Community connect logic for these table list. rest will use No CC logic until we update it in metadata table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full_CC",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BLD_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BLD"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T19:04:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Bld_REQ_SA_CC_Delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Incremental_CDC_CC from etl.x_Databricks_Logic_new x \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_EXTRACT where INITIALIZE_TIME >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0)) and FILE_SIZE_BYTES>0) c on c.TABLE_NAME=x.Sourcetablename \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_DERTBL where ckpt_init >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0))) d on d.TABLE_NAME=x.Sourcetablename \nwhere EPIC_CC_Filters in ('Service Area Lookup') and Is_REQ=1  and IsActive=1 and (c.TABLE_NAME is not null or  d.TABLE_NAME is not null)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "BLD_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"description": "using Community connect logic for these table list. rest will use No CC logic until we update it in metadata table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_incremental_CDC_CC",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BLD_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_delta','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BLD"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T19:04:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Bld_REQ_SA_CC_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Full_CC from etl.x_Databricks_Logic_new x where EPIC_CC_Filters in ('Service Area Lookup') and Is_REQ=1  and IsActive=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "BLD_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"description": "using Community connect logic for these table list. rest will use No CC logic until we update it in metadata table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full_CC",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BLD_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BLD"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T19:04:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Bld_ZC_FULL_Delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Full from etl.x_Databricks_Logic_new x\ninner join (select distinct table_name from CR_STAT_EXTRACT where FILE_SIZE_BYTES>0 and INITIALIZE_TIME >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0)))c on c.TABLE_NAME=x.Sourcetablename\nwhere x.Is_ZC=1  and x.IsActive =1 and x.Is_ZC =1 and x.Exclude= 0and x.Is_Deprecated=0",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "BLD_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BLD_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": {
													"value": "@item().targetfoldername",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BLD"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-19T15:57:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Bld_ZC_FULL_First_Time')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from etl.x_Databricks_Logic_new where IsActive =1 and is_ZC =1\nand exclude= 0 and Is_Deprecated=0",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "BLD_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BLD_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": {
													"value": "@item().targetfoldername",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BLD"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-19T15:35:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Bld_ZC_FULL_test_column_names')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.* from CR_STAT_EXTRACT c\ninner join etl.x_Databricks_Logic_new x on c.TABLE_NAME=x.Sourcetablename\nwhere x.Is_ZC=1 and INITIALIZE_TIME >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0))\nand c.FILE_SIZE_BYTES>0 and x.IsActive =1 and x.Is_ZC =1 and x.Exclude= 0",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "BLD_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BLD_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": {
													"value": "@item().targetfoldername",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BLD"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-06T02:03:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from etl.x_Databricks_Logic where IsActive =1\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TstAg2_NoTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CopyEachtables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Full",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@item().query_Full",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "TstAg2_NoTable",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Dataset_Gen2_Dynamic_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_',formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss'),'.','parquet')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-18T17:32:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_Incremental_CT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from etl.x_Databricks_Logic where IsActive =1\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TstAg2_NoTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CopyEachtables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IncrementalCopyActivity",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@item().query_Incremental_CT",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "TstAg2_NoTable",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Dataset_Gen2_Dynamic_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_',formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss'),'.','parquet')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "StoredProceduretoUpdateChangeTrackingActivity",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "new_Ct_Version_for_each_table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ETL].[x_Update_ChangeTracking_Version]",
										"storedProcedureParameters": {
											"CurrentTrackingVersion": {
												"value": {
													"value": "@{activity('new_Ct_Version_for_each_table').output.firstRow.SYS_CHANGE_VERSION_MAX}\n\n\n",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"TableName": {
												"value": {
													"value": "@item().sourcetablename",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "tstag2_IRP",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "new_Ct_Version_for_each_table",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "IncrementalCopyActivity",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT\n    max(CT.SYS_CHANGE_VERSION) as SYS_CHANGE_VERSION_MAX\nFROM\n    CHANGETABLE(CHANGES @{item().sourcetablename}, 2) AS CT",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "TstAg2_NoTable",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-18T17:32:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_VAL_FULL_DirectPull_Daily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.sourcetablename,x.targetfilename,x.targetfoldername,x.query_full from etl.x_Databricks_Logic_new x\nleft join (select distinct TABLE_NAME from dbo.CR_STAT_EXTRACT where INITIALIZE_TIME >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0)) and FILE_SIZE_BYTES>0 ) c on c.TABLE_NAME=x.Sourcetablename \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_DERTBL where ckpt_init >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0))) d on d.TABLE_NAME=x.Sourcetablename \nwhere IsActive =1 and Is_FULL=1 and  (c.TABLE_NAME is not null or  d.TABLE_NAME is not null)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Val_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Val_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "VAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T18:55:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_VAL_FULL_DirectPull_Firsttime')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Full from etl.x_Databricks_Logic_new x where x.IsActive =1 and x.Is_FULL=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Val_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Val_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "VAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T18:54:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_VAL_FULL_Non_DirectPull_Daily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.sourcetablename,x.targetfilename,x.targetfoldername,x.Query_Full_CC from etl.x_Databricks_Logic_new x\nleft join (select distinct TABLE_NAME from dbo.CR_STAT_EXTRACT where INITIALIZE_TIME >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0)) and FILE_SIZE_BYTES>0) c on c.TABLE_NAME=x.Sourcetablename \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_DERTBL where ckpt_init >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0))) d on d.TABLE_NAME=x.Sourcetablename \nwhere IsActive =1 and Is_FULL_CC=1 and  (c.TABLE_NAME is not null or  d.TABLE_NAME is not null)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Val_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full_CC",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Val_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "VAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T18:55:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_VAL_FULL_Non_DirectPull_FirstTime')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Full_CC from etl.x_Databricks_Logic_new x where x.IsActive =1 and x.Is_Full_CC=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Val_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full_CC",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Val_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "VAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T18:55:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_VAL_REQ_CUSTOM_CC_Delta_WorkinProgress')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "We are going to use non Community connect logic for these tables until we update it in metadata tables",
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Incremental_CDC from etl.x_Databricks_Logic_new x \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_EXTRACT where INITIALIZE_TIME >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0)) and FILE_SIZE_BYTES>0 ) c on c.TABLE_NAME=x.Sourcetablename \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_DERTBL where ckpt_init >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0))) d on d.TABLE_NAME=x.Sourcetablename \nwhere x.EPIC_CC_Filters='Custom' and x.Is_REQ=1 and x.Exclude=0 and x.is_zero_records=0 and x.Is_Deprecated=0 and  (c.TABLE_NAME is not null or  d.TABLE_NAME is not null)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Val_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"description": "using Community connect logic for these table list. rest will use No CC logic until we update it in metadata table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_incremental_CDC",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Val_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_delta','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "VAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T18:55:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_VAL_REQ_CUSTOM_CC_Full_WorkinProgress')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "We are going to use non Community connect logic for these tables until we update it in metadata tables",
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Full from etl.x_Databricks_Logic_new x where x.EPIC_CC_Filters='Custom' and x.Is_REQ=1 and x.Exclude=0 and x.is_zero_records=0 and x.Is_Deprecated=0",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Val_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"description": "using Community connect logic for these table list. rest will use No CC logic until we update it in metadata table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_Full",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Val_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "VAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T18:55:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_VAL_REQ_DirectPull_Delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Incremental_CDC from etl.x_Databricks_Logic_new x \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_EXTRACT where INITIALIZE_TIME >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0)) and FILE_SIZE_BYTES>0 ) c on c.TABLE_NAME=x.Sourcetablename \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_DERTBL where ckpt_init >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0))) d on d.TABLE_NAME=x.Sourcetablename \nwhere x.EPIC_CC_Filters= 'Direct Pull' and x.Is_REQ=1 and x.IsActive=1 and (c.TABLE_NAME is not null or  d.TABLE_NAME is not null)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Val_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().Query_Incremental_CDC",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Val_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_delta','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "VAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T18:55:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_VAL_REQ_DirectPull_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Full_CDC from etl.x_Databricks_Logic_new x where x.EPIC_CC_Filters= 'Direct Pull' and x.Is_REQ=1 and x.IsActive=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Val_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().Query_Full_cdc",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Val_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_Full','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "VAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T18:50:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clarity_VAL_REQ_PB_CC_Delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.20:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select x.Sourcetablename,x.Targetfilename,x.targetfoldername,x.Query_Incremental_CDC_CC from etl.x_Databricks_Logic_new x \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_EXTRACT where INITIALIZE_TIME >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0)) and FILE_SIZE_BYTES>0 ) c on c.TABLE_NAME=x.Sourcetablename \nleft join (select distinct TABLE_NAME from dbo.CR_STAT_DERTBL where ckpt_init >=DATEADD(HOUR, 22, DATEADD(DAY, DATEDIFF(DAY, 1, GETDATE()) , 0))) d on d.TABLE_NAME=x.Sourcetablename \nwhere EPIC_CC_Filters in ('Patient-Based') and Is_REQ=1 and IsActive=1 and (c.TABLE_NAME is not null or  d.TABLE_NAME is not null)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Val_No_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"description": "using Community connect logic for these table list. rest will use No CC logic until we update it in metadata table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "check_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('check_metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyChangesToBlob_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.20:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "AzureEtlLoadTime",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@item().query_incremental_CDC_CC",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Val_No_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "datasetgen2_CDC",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(item().Targetfilename,'_delta','_',formatDateTime(convertFromUtc(utcnow(), 'Mountain Standard Time'),'yyyy-MM-dd-HH-mm-ss'),'.','parquet')",
													"type": "Expression"
												},
												"folder": "@item().targetfoldername"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "VAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T18:55:02Z"
			},
			"dependsOn": []
		}
	]
}